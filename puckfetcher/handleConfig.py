import os
import platform

import yaml


def loadConfig():
    """Load config file into memory."""
    system = platform.system()
    if system == "Linux":
        defaultConfig = os.path.join(os.environ.get("HOME"), ".config")

    elif system == "Darwin":
        defaultConfig = os.path.join(os.environ.get("HOME"), "Library", "Preferences")

    # TODO this probably isn't correct.
    # Also do we care about *BSD at all?
    elif system == "Windows":
        defaultConfig = os.path.join(os.environ.get("HOME"), ".config")

    configDir = os.path.join(os.getenv("XDG_CONFIG_HOME", defaultConfig), "puckfetcher")

    if not os.path.isdir(configDir):
        os.makedirs(configDir)

    userConfig = os.path.join(configDir, "config.yaml")

    if os.path.exists(userConfig):
        with open(userConfig) as configFile:
            settings = yaml.load(configFile)
            print(settings)
    else:
        with open(userConfig, 'a') as configFile:
            # TODO version
            configFile.write("# Config file generated by puckfetcher.\n")
